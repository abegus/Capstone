@model Capstone.ViewModels.DynamicViewModel
@using Capstone.Helpers


<!-- Maybe instead of holding all of the data in the Javascript, just store it in the model and instead manipulate it with the javascript
    JS would be being used for the changing of what you see / transitions?-->


@{
    ViewBag.Title = "Take";
}


<div class="col-sm-12">
    <h3 class="col-sm-12">@Model.quiz.Name - @Model.student.First @Model.student.Last</h3>
</div>
<div class="panel panel-default container" style="padding:0; border:none">
    
    <div class="panel-body" style="padding:0; border:1px solid #eeeeee; border-top-left-radius: 15px; border-top-right-radius:15px;" >
        <div id="CurIndex">-1</div>
        <div id="indexStatus"></div>
        <div id="questionResult"></div>
        <div id="EndQuiz" style="display:none">
            @using (Html.BeginForm("Take", "DynamicTesting", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div id="DataContent" style="display:none">
                    @for (int i = 0; i < Model.answers.Length; i++)
                    {
                        @Html.EditorFor(m => Model.answers[i])
            <!--<div id="data @i">@Model.answers[i]</div>-->
                    }
                </div>
                <div class="form-group" style="display:none">
                    @Html.EditorFor(model => model.classId, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="form-group" style="display:none">
                    @Html.EditorFor(model => model.studentId, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="form-group" style="display:none">
                    @Html.EditorFor(model => model.quizId, new { htmlAttributes = new { @class = "form-control" } })
                </div>

                <div class="form-group" style="display:none">
                    @Html.EditorFor(model => model.cq, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div id="" style="display:none">
                    @for (int i = 0; i < Model.questionIds.Length; i++)
                    {
                        @Html.EditorFor(m => Model.questionIds[i])
                    }
                </div>

                <div class="form-group" style="display:none">
                    @Html.EditorFor(model => model.cla, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="form-group" style="display:none">
                    @Html.EditorFor(model => model.quiz, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="form-group" style="display:none">
                    @Html.EditorFor(model => model.student, new { htmlAttributes = new { @class = "form-control" } })
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Complete Quiz" class="btn btn-default" />
                    </div>
                </div>

            }

        </div>
    </div>
    <div class="page-header" style="margin:0; padding:0; ">
        <div class="input-group col-md-12" ">
            <div class="input-group-append">

                <input id="btnPrevAjax" class="btn btn-primary col-sm-3" name="btnPrevAjax" type="button" value="Previous Question" />
                <input id="btnNextAjax" class="btn btn-primary col-sm-3" name="btnNextAjax" type="button" value="Next Question" />
                <input id="CorrectAnswer" class="btn btn-primary col-sm-3" name="CorrectAnswer" type="button" value="Correct" />
                <input id="IncorrectAnswer" class="btn btn-primary col-sm-3" name="IncorrectAnswer" type="button" value="Incorrect" />
            </div>
        </div>

    </div>
</div>







<div style="width:600px; margin-left:auto; margin-right:auto">
   
    
</div>






@section Scripts {
    <script>

        jQuery(function () {
            jQuery('#btnNextAjax').click();
        });

        $('#CorrectAnswer').click(function () {
            //var nextIndex = $('#NextIndex').html();
            var curIndex = parseInt($('#CurIndex').html(), 10);
            AjaxRequest(curIndex, 1, false, 1); // +1 for next index modifier, 1 for correct answer, false for no skip question
        });

        $('#IncorrectAnswer').click(function () {
            //var nextIndex = $('#NextIndex').html();
            var curIndex = parseInt($('#CurIndex').html(), 10);
            AjaxRequest(curIndex, 1, false, 0); // -1 for next index modifier, 0 for incorrect answer, false for no skip question
        });

        $('#btnNextAjax').click(function () {
            //var nextIndex = $('#NextIndex').html();
            var curIndex = parseInt($('#CurIndex').html(), 10);
            AjaxRequest(curIndex, 1, true, null);
        });

        $('#btnPrevAjax').click(function () {
            //var nextIndex = $('#NextIndex').html();
            var curIndex = parseInt($('#CurIndex').html(), 10);
            AjaxRequest(curIndex, -1, true, null);
        });

        function AjaxRequest(index, modifier, skip, answer) {
            //preliminary data gathering for Answers and Questions
            var myArray = [];
            @foreach (var d in Model.questionIds)
            {
                @:myArray.push("@d");
            }

            //get the next questions index
            var nextIndex = index + modifier;
            var incrementedIndex = index + 1;

            if (nextIndex < myArray.length && nextIndex >= 0) {
                var DEST = "/DynamicTesting/GetQuestion/" + myArray[nextIndex];
                $.ajax({
                    url: DEST,
                    contentType: 'application/html; charset=utf-8',
                    type: 'GET',
                    dataType: 'html'

                })
                    .success(function (result) {

                        $("#EndQuiz").attr("style", "display:none");
                        $("#CurIndex").html(nextIndex);
                        $('#questionResult').html(result);
                        var technicalIndex = nextIndex + 1;
                        $("#indexStatus").html("Question:" + technicalIndex + "/" + myArray.length);

                        //IF it wasn't a skip, update the answer
                        if (!skip) {
                            if (parseInt(answer) == 0) {
                                $("#DataContent input:nth-child(" + incrementedIndex + ")").attr("value", '0');
                            }
                            if (answer == 1) {
                                $("#DataContent input:nth-child(" + incrementedIndex + ")").attr("value", '1');
                            }
                        }
                    })
                    .error(function (xhr, status) {
                        alert(status);
                    })
            }
            else {
                if (!skip) {
                    if (parseInt(answer) == 0)
                        $("#DataContent input:nth-child(" + incrementedIndex + ")").attr("value", '0');
                    if (answer == 1)
                        $("#DataContent input:nth-child(" + incrementedIndex + ")").attr("value", '1');
                }
                $("#questionResult").html("");
                $("#EndQuiz").attr("style", "display:block");
            }
        }


        
    </script>
}


