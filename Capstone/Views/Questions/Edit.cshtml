@model Capstone.Models.Question

@{
    ViewBag.Title = "Edit";
}



@using (Html.BeginForm("Edit", "Questions", new { quizId = ViewBag.quizId }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
	<div id="Errors" style="color:red"></div>
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Id)

	<div class="form-group" style="display:none">
		@Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
		</div>
	</div>

	@if (Model.Type == 0)
	{
		<div class="form-group">
			<label class="control-label col-md-2">Picture Question Upload</label>
			<div class="col-md-10">
				<input type="file" id="file" name="file" />
				<p>@Html.Raw(ViewBag.FileError) </p>
			</div>
		</div>
	}

	@if (Model.Type == 1)
	{
		<div class="form-group">
			@Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
			</div>
		</div>
	}

	<div class="form-group" style="display:none">
		@Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
		</div>
	</div>

	<!--<div class="form-group">
	   Html.LabelFor(model => model.StandardId, "Core Standard", htmlAttributes: new { lass = "control-label col-md-2" })
		<div class="col-md-10">
			Html.DropDownList("StandardId", null, htmlAttributes: new { class = "form-control" })
			Html.ValidationMessageFor(model => model.StandardId, "", new {class = "text-danger" })
		</div>
	</div>-->

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<div id="validateButton" class="btn btn-default">Submit</div>
			<input type="submit" style="display:none" value="Save" class="btn btn-default submitReal" />
		</div>
	</div>
</div>
}

@section Scripts {
	
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
	$("#validateButton").click(function (event) {
		var x = $("input#Text").val();
		var y = $("input#file").val();
		var z = $("input#Answer").val();
		//alert("here");

		if (x == "" || y == "") {
			$("#Errors").text("Must have valid question data");
		}
		else if (z == "") {
			$("#Errors").text("A question needs an answer");
		}
		//alert(y);
		else {
			$(".submitReal").click();
		}
	});
</script>