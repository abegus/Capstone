@model Capstone.Models.Quiz
@using Capstone.Helpers

@{
    ViewBag.Title = "Advanced";
}

<h2>Quiz Overview</h2>

<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Question</h4>
            </div>
            <div id="ModalPopup" class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="panel panel-default">
        <div class="panel panel-body">
            <h4>Quiz Details</h4>
            
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    Quiz Name
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Name)
                </dd>

                <dt>
                   Core Standard
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CoreStandard.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>

            </dl>
			<a id="@Model.Id" class="EditButton btn btn-primary">Edit</a>
			<a id="@Model.Id" class="DeleteButton btn btn-primary">Delete</a>
        </div>
    </div>

    <br />
    <div class="panel panel-default">
        <div class="panel panel-body">
            <div class="col-sm-2">
                <h4>Quiz Questions</h4>
            </div>
            <p><a id="@Model.Id" class="NewQuestionButton btn btn-primary" >Add Question</a></p>
             <table class="ui-sortable table table-striped table-hover" id="tblLocations">
                <tr>
                    <th>Question Index</th>
                    <th>Type</th>
                    <th>Question</th>
                    <th>Answer</th>
                    <th>Description</th>
                    <th>Action</th>
                </tr>
                @if (Model.Questions.Count > 0)
                {
                    for (int i = 1; i < Model.Questions.Count() + 1; i++)
                    {
                        <tr class="ui-state-default ui-sortable-handle" id="@i">
							<td id="@Model.Questions.ElementAt(i-1).Id" style="display:none">@Model.Questions.ElementAt(i - 1).Id</td>
							<td class="index">@i</td>
                            <td>
                                @if (Model.Questions.ElementAt(i - 1).Type == 0)
                                {
                                <div>Picture</div>
                                }
                            @if (Model.Questions.ElementAt(i - 1).Type == 1)
                            {
                                <div>Text</div>
                            }
                                </td>
                                <td>
                                    @if (Model.Questions.ElementAt(i - 1).Type == 0)
                                    {
                                        @Html.Image(Model.Questions.ElementAt(i - 1).Picture);
                                    }
                                    @if (Model.Questions.ElementAt(i - 1).Type == 1)
                                    {
                                        @Model.Questions.ElementAt(i - 1).Text
                                    }
                                </td>   
                            <td>@Model.Questions.ElementAt(i - 1).Answer</td>
                            <td>@Model.Questions.ElementAt(i - 1).Description</td>
                            <td>
                                <a id="@Model.Questions.ElementAt(i - 1).Id" class="EditQuestionButton btn btn-primary">Edit</a>
                                <a id="@Model.Questions.ElementAt(i - 1).Id" class="DeleteQuestionButton btn btn-primary">Delete</a>

                            </td>
                        </tr>
                    }

                }
            </table>

            <!--Html.ActionLink("Add Question", "Create", "Questions", null, null)-->
            <p><a id="@Model.Id" class="NewQuestionButton btn btn-primary">Add Question</a></p>
        </div>
        </div>

		<input id="clickMe" style="display: block; margin-top: 10px;" class="btn btn-default" type="button" value="Save Question Order" onclick="exportPositions();" />
}
<p>
    @Html.ActionLink("Back to List", "Index")
</p>


@section Scripts{
    <script>
		function exportPositions() {//cy
			var list = [];

			var table = document.getElementById("tblLocations");
			for (var i = 1, row; row = table.rows[i]; i++) {
				//iterate through rows
				var obj = {};
				//rows would be accessed using the "row" variable assigned in the for loop
				for (var j = 0, col; col = row.cells[j]; j++) {
					if (j == 0) {
						obj['QuestionId'] = col.innerText;
						console.log(col.innerText);
					}
					else if (j == 1) {
						console.log(col.innerText);
						obj['QuestionIndex'] = parseInt(col.innerText);
					}
					//iterate through columns
					//columns would be accessed using the "col" variable assigned in the for loop
				}
				list.push(obj);
			}

			list = JSON.stringify({
				'updatedQuestions': list
			});


			console.log(list);

			var url = '../UpdateQuestionOrder';
			$.ajax({
				type: 'POST',
				url: url,
				data: list,
				dataType: 'json',
				contentType: 'application/json;charset=utf-8',
				success: function (data) { alert(data); },
				failure: function (errMsg) {
					alert(errMsg);
				}
			});
		}

        $(function () {
            $("#tblLocations").sortable({
                items: 'tr:not(tr:first-child)',
                cursor: 'pointer',
                axis: 'y',
                dropOnEmpty: false,
                start: function (e, ui) {
                    ui.item.addClass("selected");
                    ui.item.startPos = ui.item.index();
                },
                helper: fixHelperModified,
                stop: updateIndex,
                receive: function (e, ui) {
                    $(this).find("tbody").append(ui.item);
                }
            });
        });
        
        var fixHelperModified = function (e, tr) {
            var $originals = tr.children();
            var $helper = tr.clone();
            $helper.children().each(function (index) {
                $(this).width($originals.eq(index).width())
            });
            return $helper;
        },
            updateIndex = function (e, ui) {
                $('td.index', ui.item.parent()).each(function (i) {
                    $(this).html(i + 1);
                });
            };

        //

         $('.EditButton').click(function (event) {
            //preliminary data gathering for Answers and Questions
            var quizId = "@Model.Id.ToString()";
            //alert(test);

            if (event.target.id != null) {
                var DEST = "/Quizs/Edit/" + quizId;
                $.ajax({
                    url: DEST,
                    contentType: 'application/html; charset=utf-8',
                    type: 'GET',
                    dataType: 'html'

                })
                    .success(function (result) {
                        $("#ModalPopup").html(result);
                        $("#myModal").modal()

                    })
                    .error(function (xhr, status) {
                        alert(status);
                    })
            }
            else {
                $("#ModalPopup").html("");
            }
        });

        $('.DeleteButton').click(function (event) {
            //preliminary data gathering for Answers and Questions
            var quizId = "@Model.Id.ToString()";
            //alert(test);

            if (event.target.id != null) {
                var DEST = "/Quizs/Delete/" + quizId;
                $.ajax({
                    url: DEST,
                    contentType: 'application/html; charset=utf-8',
                    type: 'GET',
                    dataType: 'html'

                })
                    .success(function (result) {
                        $("#ModalPopup").html(result);
                        $("#myModal").modal()

                    })
                    .error(function (xhr, status) {
                        alert(status);
                    })
            }
            else {
                $("#ModalPopup").html("");
            }
        });

        $('.NewQuestionButton').click(function (event) {
            //preliminary data gathering for Answers and Questions
            var test = "@Model.Id.ToString()";
            //alert(test);
            var numQuestions = @Model.Questions.Count();
            numQuestions++;

            if (event.target.id != null) {
                var DEST = "/Questions/Create?QuizId=" + test+"&NextIndex="+numQuestions;
                $.ajax({
                    url: DEST,
                    contentType: 'application/html; charset=utf-8',
                    type: 'GET',
                    dataType: 'html'

                })
                    .success(function (result) {
                        $("#ModalPopup").html(result);
                        $("#myModal").modal()

                    })
                    .error(function (xhr, status) {
                        alert(status);
                    })
            }
            else {
                $("#ModalPopup").html("");
            }
        });

        $('.EditQuestionButton').click(function (event) {
            //preliminary data gathering for Answers and Questions
            var questionId = event.target.id;
            var quizId = "@Model.Id.ToString()";
            //alert(test);

            if (event.target.id != null) {
                var DEST = "/Questions/Edit/"+questionId+"?QuizId=" + quizId;
                $.ajax({
                    url: DEST,
                    contentType: 'application/html; charset=utf-8',
                    type: 'GET',
                    dataType: 'html'

                })
                    .success(function (result) {
                        $("#ModalPopup").html(result);
                        $("#myModal").modal()

                    })
                    .error(function (xhr, status) {
                        alert(status);
                    })
            }
            else {
                $("#ModalPopup").html("");
            }
        });

        $('.DeleteQuestionButton').click(function (event) {
            //preliminary data gathering for Answers and Questions
            var questionId = event.target.id;
            var quizId = "@Model.Id.ToString()";
            //alert(test);

            if (event.target.id != null) {
                var DEST = "/Questions/Delete/"+questionId+"?QuizId=" + quizId;
                $.ajax({
                    url: DEST,
                    contentType: 'application/html; charset=utf-8',
                    type: 'GET',
                    dataType: 'html'

                })
                    .success(function (result) {
                        $("#ModalPopup").html(result);
                        $("#myModal").modal()

                    })
                    .error(function (xhr, status) {
                        alert(status);
                    })
            }
            else {
                $("#ModalPopup").html("");
            }
        });
    </script>
}